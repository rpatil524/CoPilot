services:
  copilot:
    image: tigergraphml/copilot:latest 
    container_name: copilot
    build:
      context: .
      dockerfile: copilot/Dockerfile
    ports:
      - 8000:8000
    depends_on:
      - eventual-consistency-service
      - chat-history
    environment:
      LLM_CONFIG: "/code/configs/llm_config.json"
      DB_CONFIG: "/code/configs/db_config.json"
      MILVUS_CONFIG: "/code/configs/milvus_config.json"
      LOGLEVEL: "INFO"
      USE_CYPHER: "true"
    volumes:
      - ./configs/:/code/configs

  eventual-consistency-service:
    image: tigergraphml/ecc:latest
    container_name: eventual-consistency-service
    build:
      context: .
      dockerfile: eventual-consistency-service/Dockerfile
    ports:
      - 8001:8001
    environment:
      LLM_CONFIG: "/code/configs/llm_config.json"
      DB_CONFIG: "/code/configs/db_config.json"
      MILVUS_CONFIG: "/code/configs/milvus_config.json"
      LOGLEVEL: "INFO"
      INIT_EMBED_STORE: "false"
    volumes:
      - ./configs/:/code/configs

  chat-history:
    image: tigergraphml/chat-history:latest
    container_name: chat-history
    build:
      context: chat-history/
      dockerfile: Dockerfile
    ports:
      - 8002:8002
    environment:
      CONFIG_FILES: "/configs/chat_config.json,/configs/db_config.json"
      LOGLEVEL: "INFO"
    volumes:
      - ./configs/:/configs

  # report-service:
  #   image: tigergraphml/report-service:latest
  #   container_name: report-service
  #   build:
  #     context: chat-history/
  #     dockerfile: Dockerfile
  #   ports:
  #     - 8002:8002
  #   environment:
  #     CONFIG: "/configs/config.json"
  #     LOGLEVEL: "INFO"
  #   volumes:
  #     - ./configs/:/code/configs
  #     - ./common:/code/common
      
  ui:
    image: tigergraphml/copilot-ui:latest 
    container_name: ui 
    build:
      context: copilot-ui
      dockerfile: Dockerfile
    ports:
      - 3000:3000
    depends_on:
      - copilot

  etcd:
    container_name: milvus-etcd
    image: quay.io/coreos/etcd:v3.5.5
    environment:
      - ETCD_AUTO_COMPACTION_MODE=revision
      - ETCD_AUTO_COMPACTION_RETENTION=1000
      - ETCD_QUOTA_BACKEND_BYTES=4294967296
      - ETCD_SNAPSHOT_COUNT=50000
    volumes:
      - milvus_etcd:/etcd
    command: etcd -advertise-client-urls=http://127.0.0.1:2379 -listen-client-urls http://0.0.0.0:2379 --data-dir /etcd
    healthcheck:
      test: ["CMD", "etcdctl", "endpoint", "health"]
      interval: 30s
      timeout: 20s
      retries: 3

  minio:
    container_name: milvus-minio
    image: minio/minio:RELEASE.2023-03-20T20-16-18Z
    environment:
      MINIO_ACCESS_KEY: minioadmin
      MINIO_SECRET_KEY: minioadmin
    ports:
      - "9001:9001"
      - "9000:9000"
    volumes:
      - milvus_minio:/minio_data
    command: minio server /minio_data --console-address ":9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  milvus-standalone:
    container_name: milvus-standalone
    image: milvusdb/milvus:v2.4.6
    command: ["milvus", "run", "standalone"]
    security_opt:
    - seccomp:unconfined
    environment:
      ETCD_ENDPOINTS: etcd:2379
      MINIO_ADDRESS: minio:9000
    volumes:
      - milvus:/var/lib/milvus
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9091/healthz"]
      interval: 30s
      start_period: 90s
      timeout: 20s
      retries: 3
    ports:
      - "19530:19530"
      - "9091:9091"
    depends_on:
      - "etcd"
      - "minio"

  nginx:
    container_name: nginx
    image: nginx
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
    ports:
      - "80:80"
    depends_on:
      - ui
      - copilot

#  tigergraph:
#    container_name: tigergraph
#    image: tigergraph/community:4.2.0
#    ports:
#      - "14240:14240"

volumes:
  milvus_etcd:
  milvus_minio:
  milvus:
